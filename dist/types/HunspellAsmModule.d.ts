import { BaseAsmModule } from 'emscripten-wasm-loader';
/** @internal */
export declare type FILESYSTEMS = {
    NODEFS: any;
    MEMFS: any;
};
/**
 * Subset of internal filesystem api for wasm module.
 */
/** @internal */
export declare type FS = {
    filesystems: FILESYSTEMS;
    stat: (path: string) => import('fs').Stats;
    isDir: (mode: number) => boolean;
    isFile: (mode: number) => boolean;
    mkdir: (path: string, mode?: number) => void;
    mount: (type: FILESYSTEMS, option: {
        root?: string;
    }, mountpoint: string) => void;
    writeFile: (path: string, data: ArrayBufferView, opts: {
        encoding?: string;
        flags?: string;
    }) => void;
    unlink: (path: string) => void;
    unmount: (mountpoint: string) => void;
    rmdir: (path: string) => void;
};
/**
 * Interface for module generated by emscripten to load wasm binary.
 * https://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html
 */
/** @internal */
export interface HunspellAsmModule extends Required<BaseAsmModule> {
}
//# sourceMappingURL=HunspellAsmModule.d.ts.map